extension/
├── manifest.json
├── popup.html
├── popup.css
├── popup.js
└── icons/
    ├── icon16.png
    ├── icon48.png
    └── icon128.png

// manifest.json
{
  "manifest_version": 3,
  "name": "ESP32 Timer Relay Control",
  "version": "1.0",
  "description": "Control ESP32 Timer Relays via MQTT",
  "icons": {
    "16": "icons/icon16.png",
    "48": "icons/icon48.png",
    "128": "icons/icon128.png"
  },
  "action": {
    "default_popup": "popup.html",
    "default_icon": {
      "16": "icons/icon16.png",
      "48": "icons/icon48.png",
      "128": "icons/icon128.png"
    }
  },
  "permissions": [
    "storage"
  ],
  "content_security_policy": {
    "extension_pages": "script-src 'self' 'wasm-unsafe-eval'; object-src 'self';"
  }
}

// popup.html
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <link rel="stylesheet" href="popup.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/mqtt/4.3.7/mqtt.min.js"></script>
</head>
<body>
  <div class="container">
    <div id="connectionStatus" class="connection-status disconnected">
      ค้นหาอุปกรณ์...
    </div>
    
    <div class="relay-grid">
      <div class="relay-card">
        <h2>ปริ้นเอกสาร</h2>
        <div class="timer-display" id="relay1Timer">00:00</div>
        <div class="status" id="relay1Status">
          <div><span class="status-icon"></span><span class="status-text">รอการเชื่อมต่อ</span></div>
        </div>
        <div class="toggle-container">
          <span class="toggle-label">นับเวลาถอยหลัง</span>
          <label class="switch">
            <input type="checkbox" id="timer1Toggle" checked>
            <span class="slider"></span>
          </label>
        </div>
        <div class="button-group">
          <button class="control-button on" id="relay1Button">เปิด</button>
        </div>
      </div>

      <div class="relay-card">
        <h2>ปริ้นรูปขนาดใหญ่</h2>
        <div class="timer-display" id="relay2Timer">00:00</div>
        <div class="status" id="relay2Status">
          <div><span class="status-icon"></span><span class="status-text">รอการเชื่อมต่อ</span></div>
        </div>
        <div class="toggle-container">
          <span class="toggle-label">นับเวลาถอยหลัง</span>
          <label class="switch">
            <input type="checkbox" id="timer2Toggle" checked>
            <span class="slider"></span>
          </label>
        </div>
        <div class="button-group">
          <button class="control-button on" id="relay2Button">เปิด</button>
        </div>
      </div>
    </div>
  </div>
  <script src="popup.js"></script>
</body>
</html>

// popup.css
body {
  width: 400px;
  padding: 15px;
  font-family: 'Kanit', sans-serif;
}

.container {
  padding: 10px;
}

.relay-grid {
  display: grid;
  gap: 15px;
}

.relay-card {
  background: #ffffff;
  border-radius: 8px;
  padding: 15px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.timer-display {
  font-size: 1.5em;
  text-align: center;
  margin: 10px 0;
  color: #2196F3;
  font-family: monospace;
}

.status {
  padding: 10px;
  border-radius: 5px;
  margin: 10px 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.status-icon {
  display: inline-block;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  margin-right: 8px;
}

.status-on .status-icon {
  background-color: #4CAF50;
  box-shadow: 0 0 5px #4CAF50;
}

.status-off .status-icon {
  background-color: #f44336;
}

.button-group {
  margin-top: 15px;
}

.control-button {
  width: 100%;
  padding: 8px;
  border: none;
  border-radius: 5px;
  font-family: 'Kanit', sans-serif;
  font-size: 1em;
  cursor: pointer;
}

.control-button.on {
  background-color: #4CAF50;
  color: white;
}

.control-button.off {
  background-color: #f44336;
  color: white;
}

// popup.js
const mqttServer = 'test.mosquitto.org';
const mqttPort = 8081;
const deviceId = 'extension_' + Math.random().toString(16).substr(2, 8);

const topicPrefix = 'iot/timer-relay/';
const topics = {
  relay1Control: topicPrefix + 'relay1/control',
  relay2Control: topicPrefix + 'relay2/control',
  status: topicPrefix + 'status',
  command: topicPrefix + 'command'
};

let timerEnabled = {
  1: true,
  2: true
};

const client = mqtt.connect(`wss://${mqttServer}:${mqttPort}`, {
  clientId: deviceId,
  clean: true,
  reconnectPeriod: 3000,
  connectTimeout: 30 * 1000
});

// Add all the MQTT client event handlers and functions from the original code
// Add event listeners for buttons and toggles
document.getElementById('relay1Button').addEventListener('click', () => toggleRelay(1));
document.getElementById('relay2Button').addEventListener('click', () => toggleRelay(2));
document.getElementById('timer1Toggle').addEventListener('change', (e) => toggleTimer(1, e.target.checked));
document.getElementById('timer2Toggle').addEventListener('change', (e) => toggleTimer(2, e.target.checked));

// Add the rest of the functions from the original code (toggleRelay, requestStatus, formatTime, updateStatus, etc.)
